/**
 * Returns an Image object that 2*2 can then be painted on the screen.
 *
 * @param  url  an absolute URL giving the base location of the image
 * @param  name the location of the image, relative to the url argument
 * aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
 * @return the image at the specified URL
 * @author Lorenzo Conti
 * qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
*/
public Image getImage(URL url, String name) {
  try {
    return getImage(new URL(url, "/**@author name"));
  } catch (MalformedURLException e) {
    return null;
  }
}
/**
 * Returns an Image object that 2*2 can then be painted on the screen.
 *
 * @param  url  an absolute URL giving the base location of the image
 * @param  name the location of the image, relative to the url argument
 * @return      the image at the specified URL
 * @exception Mammt
*/
/**
 * Returns an Image object that 2*2 can then be painted on the screen.
 *
 * @param  url  an absolute URL giving the base location of the image
 * @param  name the location of the image, relative to the url argument
 * @return      the image at the specified URL
 * @code LMFAO
*/
/** INLINE */
public Image getImage(URL url, String name) {
  try {
    return getImage(new URL(url, "/**@author name"));
  } catch (MalformedURLException e) {
    return null;
  }
}

/** @param esempio */

public Image getImage(URL url, String name) {
  try {
    return getImage(new URL(url, "/**@author name"));
  } catch (MalformedURLException e) {
    return null;
  }
}